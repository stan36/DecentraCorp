{
  "contractName": "CryptoPatentBlockchain",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "GUBG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "memberCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ideaBlockReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalBlockHalfTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalIdeaCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "IDC",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalUseBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RBG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "IBG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "repStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "generateUseBlockWeight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalRepCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newStakeAmount",
          "type": "uint256"
        }
      ],
      "name": "changeStakeAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaIPFS",
          "type": "string"
        },
        {
          "name": "_globalUseBlockAmount",
          "type": "uint256"
        },
        {
          "name": "_miningTime",
          "type": "uint256"
        },
        {
          "name": "_royalty",
          "type": "uint256"
        },
        {
          "name": "_inventor",
          "type": "address"
        }
      ],
      "name": "generateIdeaBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DCPoA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ideaId",
          "type": "uint256"
        },
        {
          "name": "_repAdd",
          "type": "address"
        }
      ],
      "name": "generateReplicationBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_dcpoa",
          "type": "address"
        },
        {
          "name": "_IDC",
          "type": "address"
        },
        {
          "name": "_IBG",
          "type": "address"
        },
        {
          "name": "_RBG",
          "type": "address"
        },
        {
          "name": "_GUBG",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mem",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dcpoa",
          "type": "address"
        },
        {
          "name": "_IDC",
          "type": "address"
        },
        {
          "name": "_IBG",
          "type": "address"
        },
        {
          "name": "_RBG",
          "type": "address"
        },
        {
          "name": "_GUBG",
          "type": "address"
        }
      ],
      "name": "setGenerators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "checkIfMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemberCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052683635c9adc5dea00000600b5568056bc75e2d63100000600c5534801561002a57600080fd5b5060405160a0806126918339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600a819055506001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506124248061026d6000396000f300608060405260043610610132576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062beed731461013757806311aee3801461018e5780631ddc883b146101b957806328a6e47c146101e457806329a4d6ab1461020f5780634951f6aa146102d25780634cfa24091461032d57806352d2c11d14610358578063715018a6146103af57806375824974146103c65780637e81347d146103f15780638da5cb5b14610448578063997072f71461049f5780639df2c4de146104ca5780639f7d892914610521578063a416ecd71461054c578063be6cbbcf14610563578063ca6d56dc1461058e578063ca79b5a9146105d1578063cb2d97f8146105fe578063e026daa1146106a5578063f2fde38b146106fc578063f8c711fa1461073f575b600080fd5b34801561014357600080fd5b5061014c61078c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019a57600080fd5b506101a36107b2565b6040518082815260200191505060405180910390f35b3480156101c557600080fd5b506101ce6107b8565b6040518082815260200191505060405180910390f35b3480156101f057600080fd5b506101f96107be565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b506102d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c4565b005b3480156102de57600080fd5b50610313600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061096b565b604051808215151515815260200191505060405180910390f35b34801561033957600080fd5b506103426109d5565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b5061036d6109db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103bb57600080fd5b506103c4610a01565b005b3480156103d257600080fd5b506103db610b03565b6040518082815260200191505060405180910390f35b3480156103fd57600080fd5b50610406610b09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045457600080fd5b5061045d610b2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ab57600080fd5b506104b4610b54565b6040518082815260200191505060405180910390f35b3480156104d657600080fd5b506104df610b5e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052d57600080fd5b50610536610b84565b6040518082815260200191505060405180910390f35b34801561055857600080fd5b50610561610b8a565b005b34801561056f57600080fd5b50610578610ca5565b6040518082815260200191505060405180910390f35b34801561059a57600080fd5b506105cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cab565b005b3480156105dd57600080fd5b506105fc60048036038101908080359060200190929190505050610d61565b005b34801561060a57600080fd5b506106a3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dc6565b005b3480156106b157600080fd5b506106ba611141565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070857600080fd5b5061073d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611167565b005b34801561074b57600080fd5b5061078a60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ce565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600b5481565b600a5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081f57600080fd5b84600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b600060011515600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156109cf57600190506109d0565b5b919050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60095481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600854905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b600060011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638eb5b913336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d6020811015610c7757600080fd5b81019080805190602001909291905050501515141515610c9657600080fd5b339050610ca2816115a0565b50565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0657600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dbc57600080fd5b80600c8190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e2157600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fce263386868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825287818151815260200191508051906020019080838360005b83811015610f13578082015181840152602081019050610ef8565b50505050905090810190601f168015610f405780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b5050505060066000815480929190600101919050555060011515600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611052576001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506008600081548092919060010191905055505b61105a611a14565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad082600b546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b505050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111c257600080fd5b6111cb81611a56565b50565b600760008154809291906001019190505550600c54600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156112a057600080fd5b505af11580156112b4573d6000803e3d6000fd5b505050506040513d60208110156112ca57600080fd5b8101908080519060200190929190505050101515156112e857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663744a20fd33600c546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156113af57600080fd5b505af11580156113c3573d6000803e3d6000fd5b5050505060001515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561148b576001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506008600081548092919060010191905055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e934f00b8383336040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561158457600080fd5b505af1158015611598573d6000803e3d6000fd5b505050505050565b600080600080600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388556ddc8a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561166957600080fd5b505af115801561167d573d6000803e3d6000fd5b505050506040513d602081101561169357600080fd5b81019080805190602001909291905050509750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d5e5c5618a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561176357600080fd5b505af1158015611777573d6000803e3d6000fd5b505050506040513d602081101561178d57600080fd5b81019080805190602001909291905050509650600195506117ae8689611b50565b9450600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000205493508484019250600d6000898152602001908152602001600020549150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d5f3dfc896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156118af57600080fd5b505af11580156118c3573d6000803e3d6000fd5b505050506040513d60208110156118d957600080fd5b8101908080519060200190929190505050905082600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055508183101580156119515750804210155b15611a095761195f89611c80565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb47f760896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156119f057600080fd5b505af1158015611a04573d6000803e3d6000fd5b505050505b505050505050505050565b60006305a48fba600a540142101515611a4d576002600b54811515611a3557fe5b04600b8190555042600a81905550600b549050611a53565b600b5490505b90565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611a9257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330255eb533886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c1d57600080fd5b505af1158015611c31573d6000803e3d6000fd5b505050506040513d6020811015611c4757600080fd5b81019080805190602001909291905050509350600a87811515611c6657fe5b049250838302915081870190508094505050505092915050565b6000806000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dbe10d51876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611d4557600080fd5b505af1158015611d59573d6000803e3d6000fd5b505050506040513d6020811015611d6f57600080fd5b81019080805190602001909291905050509450600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb788457876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611e3f57600080fd5b505af1158015611e53573d6000803e3d6000fd5b505050506040513d6020811015611e6957600080fd5b81019080805190602001909291905050509350600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388556ddc876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b81019080805190602001909291905050509250600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb61e371876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561203357600080fd5b505af1158015612047573d6000803e3d6000fd5b505050506040513d602081101561205d57600080fd5b81019080805190602001909291905050509150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4f69b68846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561210157600080fd5b505af1158015612115573d6000803e3d6000fd5b505050506040513d602081101561212b57600080fd5b81019080805190602001909291905050509050818103905061214d8184611b50565b9050600960008154809291906001019190505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d99e98fb866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561221e57600080fd5b505af1158015612232573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad086836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156122fb57600080fd5b505af115801561230f573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad085846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156123d857600080fd5b505af11580156123ec573d6000803e3d6000fd5b505050505050505050505600a165627a7a72305820ec8b1421e4291540a133b8110b0e2223307e48d68e7818b4f8ada7eae761ebe10029",
  "deployedBytecode": "0x608060405260043610610132576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062beed731461013757806311aee3801461018e5780631ddc883b146101b957806328a6e47c146101e457806329a4d6ab1461020f5780634951f6aa146102d25780634cfa24091461032d57806352d2c11d14610358578063715018a6146103af57806375824974146103c65780637e81347d146103f15780638da5cb5b14610448578063997072f71461049f5780639df2c4de146104ca5780639f7d892914610521578063a416ecd71461054c578063be6cbbcf14610563578063ca6d56dc1461058e578063ca79b5a9146105d1578063cb2d97f8146105fe578063e026daa1146106a5578063f2fde38b146106fc578063f8c711fa1461073f575b600080fd5b34801561014357600080fd5b5061014c61078c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019a57600080fd5b506101a36107b2565b6040518082815260200191505060405180910390f35b3480156101c557600080fd5b506101ce6107b8565b6040518082815260200191505060405180910390f35b3480156101f057600080fd5b506101f96107be565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b506102d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c4565b005b3480156102de57600080fd5b50610313600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061096b565b604051808215151515815260200191505060405180910390f35b34801561033957600080fd5b506103426109d5565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b5061036d6109db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103bb57600080fd5b506103c4610a01565b005b3480156103d257600080fd5b506103db610b03565b6040518082815260200191505060405180910390f35b3480156103fd57600080fd5b50610406610b09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045457600080fd5b5061045d610b2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ab57600080fd5b506104b4610b54565b6040518082815260200191505060405180910390f35b3480156104d657600080fd5b506104df610b5e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052d57600080fd5b50610536610b84565b6040518082815260200191505060405180910390f35b34801561055857600080fd5b50610561610b8a565b005b34801561056f57600080fd5b50610578610ca5565b6040518082815260200191505060405180910390f35b34801561059a57600080fd5b506105cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cab565b005b3480156105dd57600080fd5b506105fc60048036038101908080359060200190929190505050610d61565b005b34801561060a57600080fd5b506106a3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dc6565b005b3480156106b157600080fd5b506106ba611141565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070857600080fd5b5061073d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611167565b005b34801561074b57600080fd5b5061078a60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ce565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600b5481565b600a5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081f57600080fd5b84600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b600060011515600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156109cf57600190506109d0565b5b919050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60095481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600854905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b600060011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638eb5b913336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d6020811015610c7757600080fd5b81019080805190602001909291905050501515141515610c9657600080fd5b339050610ca2816115a0565b50565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0657600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dbc57600080fd5b80600c8190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e2157600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fce263386868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825287818151815260200191508051906020019080838360005b83811015610f13578082015181840152602081019050610ef8565b50505050905090810190601f168015610f405780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b5050505060066000815480929190600101919050555060011515600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611052576001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506008600081548092919060010191905055505b61105a611a14565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad082600b546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b505050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111c257600080fd5b6111cb81611a56565b50565b600760008154809291906001019190505550600c54600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156112a057600080fd5b505af11580156112b4573d6000803e3d6000fd5b505050506040513d60208110156112ca57600080fd5b8101908080519060200190929190505050101515156112e857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663744a20fd33600c546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156113af57600080fd5b505af11580156113c3573d6000803e3d6000fd5b5050505060001515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561148b576001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506008600081548092919060010191905055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e934f00b8383336040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561158457600080fd5b505af1158015611598573d6000803e3d6000fd5b505050505050565b600080600080600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388556ddc8a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561166957600080fd5b505af115801561167d573d6000803e3d6000fd5b505050506040513d602081101561169357600080fd5b81019080805190602001909291905050509750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d5e5c5618a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561176357600080fd5b505af1158015611777573d6000803e3d6000fd5b505050506040513d602081101561178d57600080fd5b81019080805190602001909291905050509650600195506117ae8689611b50565b9450600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000205493508484019250600d6000898152602001908152602001600020549150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d5f3dfc896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156118af57600080fd5b505af11580156118c3573d6000803e3d6000fd5b505050506040513d60208110156118d957600080fd5b8101908080519060200190929190505050905082600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055508183101580156119515750804210155b15611a095761195f89611c80565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb47f760896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156119f057600080fd5b505af1158015611a04573d6000803e3d6000fd5b505050505b505050505050505050565b60006305a48fba600a540142101515611a4d576002600b54811515611a3557fe5b04600b8190555042600a81905550600b549050611a53565b600b5490505b90565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611a9257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330255eb533886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c1d57600080fd5b505af1158015611c31573d6000803e3d6000fd5b505050506040513d6020811015611c4757600080fd5b81019080805190602001909291905050509350600a87811515611c6657fe5b049250838302915081870190508094505050505092915050565b6000806000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dbe10d51876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611d4557600080fd5b505af1158015611d59573d6000803e3d6000fd5b505050506040513d6020811015611d6f57600080fd5b81019080805190602001909291905050509450600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb788457876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611e3f57600080fd5b505af1158015611e53573d6000803e3d6000fd5b505050506040513d6020811015611e6957600080fd5b81019080805190602001909291905050509350600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388556ddc876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b81019080805190602001909291905050509250600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb61e371876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561203357600080fd5b505af1158015612047573d6000803e3d6000fd5b505050506040513d602081101561205d57600080fd5b81019080805190602001909291905050509150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4f69b68846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561210157600080fd5b505af1158015612115573d6000803e3d6000fd5b505050506040513d602081101561212b57600080fd5b81019080805190602001909291905050509050818103905061214d8184611b50565b9050600960008154809291906001019190505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d99e98fb866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561221e57600080fd5b505af1158015612232573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad086836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156122fb57600080fd5b505af115801561230f573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f471ad085846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156123d857600080fd5b505af11580156123ec573d6000803e3d6000fd5b505050505050505050505600a165627a7a72305820ec8b1421e4291540a133b8110b0e2223307e48d68e7818b4f8ada7eae761ebe10029",
  "sourceMap": "51:1242:0:-;;;3539:22:6;3509:52;;3618:21;3595:44;;100:345:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:345:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:10:14;567:5;;:18;;;;;;;;;;;;;;;;;;220:3:0;198:19;:25;;;;251:4;229:7;:19;237:10;229:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;285:6;261:5;;:31;;;;;;;;;;;;;;;;;;313:4;298:3;;:20;;;;;;;;;;;;;;;;;;349:4;324:3;;:30;;;;;;;;;;;;;;;;;;392:4;360:3;;:37;;;;;;;;;;;;;;;;;;434:5;403:4;;:37;;;;;;;;;;;;;;;;;;100:345;;;;;51:1242;;;;;;",
  "deployedSourceMap": "51:1242:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2991:35:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2991:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3278:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3278:23:6;;;;;;;;;;;;;;;;;;;;;;;3509:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3509:52:6;;;;;;;;;;;;;;;;;;;;;;;3414:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3414:31:6;;;;;;;;;;;;;;;;;;;;;;;535:407:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;535:407:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3084:27:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3084:27:6;;;;;;;;;;;;;;;;;;;;;;;2863:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2863:19:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:14;;;;;;3355:26:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3355:26:6;;;;;;;;;;;;;;;;;;;;;;;2951:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2951:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:81:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1172:81:0;;;;;;;;;;;;;;;;;;;;;;;2918:29:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2918:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3595:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3595:44:6;;;;;;;;;;;;;;;;;;;;;;;1197:109:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1197:109:9;;;;;;3173:26:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3173:26:6;;;;;;;;;;;;;;;;;;;;;;;449:82:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;449:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:105:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;719:105:7;;;;;;;;;;;;;;;;;;;;;;;;;;135:638:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:638:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2886:28:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2886:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:632:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:632:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2991:35:6;;;;;;;;;;;;;:::o;3278:23::-;;;;:::o;3509:52::-;;;;:::o;3414:31::-;;;;:::o;535:407:0:-;719:5:14;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;772:6:0;748:5;;:31;;;;;;;;;;;;;;;;;;802:4;787:3;;:20;;;;;;;;;;;;;;;;;;840:4;815:3;;:30;;;;;;;;;;;;;;;;;;885:4;853:3;;:37;;;;;;;;;;;;;;;;;;929:5;898:4;;:37;;;;;;;;;;;;;;;;;;535:407;;;;;:::o;946:222::-;1006:4;1041;1021:24;;:7;:16;1029:7;1021:16;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;1018:54;;;1061:4;1054:11;;;;1018:54;946:222;;;;:::o;3084:27:6:-;;;;:::o;2863:19::-;;;;;;;;;;;;;:::o;1001:111:14:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;3355:26:6:-;;;;:::o;2951:36::-;;;;;;;;;;;;;:::o;238:20:14:-;;;;;;;;;;;;;:::o;1172:81:0:-;1218:4;1237:11;;1230:18;;1172:81;:::o;2918:29:6:-;;;;;;;;;;;;;:::o;3595:44::-;;;;:::o;1197:109:9:-;1256:12;4080:4:6;4050:34;;:3;;;;;;;;;;;:14;;;4065:10;4050:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4050:26:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4050:26:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4050:26:6;;;;;;;;;;;;;;;;:34;;;4042:43;;;;;;;;1271:10:9;1256:25;;1283:20;1298:4;1283:14;:20::i;:::-;1197:109;:::o;3173:26:6:-;;;;:::o;449:82:0:-;719:5:14;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;522:4:0;506:7;:13;514:4;506:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;449:82;:::o;719:105:7:-;:5:14;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;804:15:7;793:8;:26;;;;719:105;:::o;135:638:3:-;719:5:14;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;305:3:3;;;;;;;;;;;:22;;;329:9;340:21;363:11;376:8;387:9;305:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;305:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:92:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;305:92:3;;;;438:15;;:17;;;;;;;;;;;;;486:4;464:26;;:7;:18;472:9;464:18;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;461:187;;;541:4;520:7;:18;528:9;520:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;600:11;;:13;;;;;;;;;;;;;461:187;653:19;:17;:19::i;:::-;;678:5;;;;;;;;;;;:15;;;695:9;706:15;;678:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;678:44:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;678:44:3;;;;135:638;;;;;:::o;2886:28:6:-;;;;;;;;;;;;;:::o;1274:103:14:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;81:632:7:-;156:14;;:16;;;;;;;;;;;;;211:8;;182:3;;;;;;;;;;;:13;;;196:10;182:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;182:25:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;182:25:7;;;;;;;;;;;;;;;;:37;;174:46;;;;;;;;293:5;;;;;;;;;;;:15;;;309:10;321:8;;293:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;293:37:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;293:37:7;;;;407:5;384:28;;:7;:19;392:10;384:19;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;381:132;;;439:4;417:7;:19;425:10;417:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;497:11;;:13;;;;;;;;;;;;;381:132;514:3;;;;;;;;;;;:20;;;536:7;546;555:10;514:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;514:52:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;514:52:7;;;;81:632;;:::o;1309:1237:9:-;1361:11;1462:10;1569:17;1627:12;1783:11;1901:14;1988:17;2103:13;1375:3;;;;;;;;;;;:13;;;1389:4;1375:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1375:19:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1375:19:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1375:19:9;;;;;;;;;;;;;;;;1361:33;;1475:3;;;;;;;;;;;:12;;;1488:4;1475:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1475:18:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1475:18:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1475:18:9;;;;;;;;;;;;;;;;1462:31;;1589:1;1569:21;;1642:36;1657:12;1671:6;1642:14;:36::i;:::-;1627:51;;1797:18;:24;1816:4;1797:24;;;;;;;;;;;;;;;:31;1822:5;1797:31;;;;;;;;;;;;1783:45;;1927:7;1918:6;:16;1901:33;;2008:13;:21;2022:6;2008:21;;;;;;;;;;;;1988:41;;2119:3;;;;;;;;;;;:17;;;2137:6;2119:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2119:25:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2119:25:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2119:25:9;;;;;;;;;;;;;;;;2103:41;;2182:9;2148:18;:24;2167:4;2148:24;;;;;;;;;;;;;;;:31;2173:5;2148:31;;;;;;;;;;;:43;;;;2262:12;2249:9;:25;;:44;;;;;2285:8;2278:3;:15;;2249:44;2246:296;;;2353:28;2376:4;2353:22;:28::i;:::-;2432:3;;;;;;;;;;;:17;;;2450:6;2432:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:25:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2432:25:9;;;;2246:296;1309:1237;;;;;;;;;:::o;777:250:3:-;823:4;866:8;844:19;;:30;837:3;:37;;834:159;;;920:1;902:15;;:19;;;;;;;;884:15;:37;;;;951:3;929:19;:25;;;;969:15;;962:22;;;;834:159;1007:15;;1000:22;;777:250;;:::o;1512:171:14:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;4176:316:6:-;4250:4;4262:17;4328:16;4371:14;4420:16;4283:3;;;;;;;;;;;:16;;;4301:10;4314:7;4283:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4283:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4283:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4283:39:6;;;;;;;;;;;;;;;;4262:60;;4362:2;4348:12;:16;;;;;;;;4328:37;;4402:12;4388:11;:26;4371:43;;4454:9;4439:12;:24;4420:43;;4476:11;4469:18;;4176:316;;;;;;;;:::o;82:1113:9:-;141:23;271:16;382:11;485:12;592:16;167:3;;;;;;;;;;;:20;;;188:4;167:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;167:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;167:26:9;;;;;;;;;;;;;;;;141:52;;290:3;;;;;;;;;;;:23;;;314:4;290:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;290:29:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;290:29:9;;;;;;;;;;;;;;;;271:48;;396:3;;;;;;;;;;;:13;;;410:4;396:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;396:19:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;396:19:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;396:19:9;;;;;;;;;;;;;;;;382:33;;500:3;;;;;;;;;;;:14;;;515:4;500:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:20:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;500:20:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;500:20:9;;;;;;;;;;;;;;;;485:35;;611:3;;;;;;;;;;;:27;;;639:6;611:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:35:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;611:35:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;611:35:9;;;;;;;;;;;;;;;;592:54;;737:7;723:11;:21;709:35;;815;830:11;843:6;815:14;:35::i;:::-;801:49;;921:14;;:16;;;;;;;;;;;;;979:4;;;;;;;;;;;:22;;;1002:15;979:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;979:39:9;;;;1022:5;;;;;;;;;;;:15;;;1038;1055:11;1022:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1022:45:9;;;;1118:5;;;;;;;;;;;:15;;;1134:8;1144:7;1118:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1118:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1118:34:9;;;;82:1113;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\nimport \"./UseLogic.sol\";\n\ncontract CryptoPatentBlockchain is UseLogic {\n\n  constructor(address _dcpoa, address _IDC, address _IBG, address _RBG, address _GUBG) public {\n    globalBlockHalfTime = now;\n    members[msg.sender] = true;\n    DCPoA = DecentraCorpPoA(_dcpoa);\n    IDC = IdeaCoin(_IDC);\n    IBG = IdeaBlockGenerator(_IBG);\n    RBG = ReplicationBlockGenerator(_RBG);\n    GUBG = GlobalUseBlockGenerator(_GUBG);\n  }\n\n  function addMember(address _mem) public onlyOwner{\n      members[_mem] = true;\n  }\n\n  function setGenerators(\n    DecentraCorpPoA _dcpoa,\n    IdeaCoin _IDC,\n    IdeaBlockGenerator _IBG,\n    ReplicationBlockGenerator _RBG,\n    GlobalUseBlockGenerator _GUBG\n    )\n    public\n    onlyOwner\n    {\n      DCPoA = DecentraCorpPoA(_dcpoa);\n      IDC = IdeaCoin(_IDC);\n      IBG = IdeaBlockGenerator(_IBG);\n      RBG = ReplicationBlockGenerator(_RBG);\n      GUBG = GlobalUseBlockGenerator(_GUBG);\n    }\n\n  function checkIfMember(address _member) public view returns(bool) {\n    if(members[_member] == true){\n      return true;\n    }\n    //allows function caller to input an address and see if it is a member of CryptoGrowDAC\n  }\n\n  function getMemberCount() public view returns(uint) {\n    return memberCount;\n  }\n  //returns total number of members\n\n\n}\n",
  "sourcePath": "/home/stan36/repos/DecentraCorp/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/DecentraCorp/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
    "exportedSymbols": {
      "CryptoPatentBlockchain": [
        145
      ]
    },
    "id": 146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorp/contracts/CryptoPatent/UseLogic.sol",
        "file": "./UseLogic.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 1675,
        "src": "25:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "UseLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1674,
              "src": "86:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UseLogic_$1674",
                "typeString": "contract UseLogic"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "86:8:0"
          }
        ],
        "contractDependencies": [
          406,
          928,
          1002,
          1674,
          1934
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 145,
        "linearizedBaseContracts": [
          145,
          1674,
          1002,
          406,
          928,
          1934
        ],
        "name": "CryptoPatentBlockchain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "192:253:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "globalBlockHalfTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "198:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3667,
                      "src": "220:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "198:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "198:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "229:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3665,
                          "src": "237:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "237:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "229:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "251:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "229:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "229:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "261:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "285:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29,
                        "name": "DecentraCorpPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "269:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorpPoA_$653_$",
                          "typeString": "type(contract DecentraCorpPoA)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "269:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "src": "261:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "261:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "IDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "298:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "_IDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "313:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IdeaCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "304:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaCoin_$666_$",
                          "typeString": "type(contract IdeaCoin)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "304:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "src": "298:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "298:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "IBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "324:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "_IBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "349:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "IdeaBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "330:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaBlockGenerator_$725_$",
                          "typeString": "type(contract IdeaBlockGenerator)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "330:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "src": "324:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "324:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "RBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "360:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "_RBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "392:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47,
                        "name": "ReplicationBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "366:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationBlockGenerator_$816_$",
                          "typeString": "type(contract ReplicationBlockGenerator)"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "366:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "src": "360:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "360:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "GUBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "403:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "_GUBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53,
                        "name": "GlobalUseBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "410:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GlobalUseBlockGenerator_$831_$",
                          "typeString": "type(contract GlobalUseBlockGenerator)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "410:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "src": "403:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "403:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "112:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "_IDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "128:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_IBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "142:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_RBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "156:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_GUBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "170:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "111:73:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:0:0"
            },
            "scope": 145,
            "src": "100:345:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "498:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "506:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_mem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "514:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "506:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "522:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "506:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "506:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1882,
                  "src": "489:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "489:9:0"
              }
            ],
            "name": "addMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "_mem",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "468:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "467:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:0"
            },
            "scope": 145,
            "src": "449:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "740:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "748:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "772:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                            "typeString": "contract DecentraCorpPoA"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                            "typeString": "contract DecentraCorpPoA"
                          }
                        ],
                        "id": 89,
                        "name": "DecentraCorpPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "756:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorpPoA_$653_$",
                          "typeString": "type(contract DecentraCorpPoA)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "src": "748:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "748:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "IDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "787:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "_IDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdeaCoin_$666",
                            "typeString": "contract IdeaCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IdeaCoin_$666",
                            "typeString": "contract IdeaCoin"
                          }
                        ],
                        "id": 95,
                        "name": "IdeaCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "793:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaCoin_$666_$",
                          "typeString": "type(contract IdeaCoin)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "793:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "src": "787:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "787:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "IBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "815:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "_IBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "840:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                            "typeString": "contract IdeaBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                            "typeString": "contract IdeaBlockGenerator"
                          }
                        ],
                        "id": 101,
                        "name": "IdeaBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "821:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaBlockGenerator_$725_$",
                          "typeString": "type(contract IdeaBlockGenerator)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "821:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "src": "815:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "815:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "RBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "853:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "_RBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "885:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                            "typeString": "contract ReplicationBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                            "typeString": "contract ReplicationBlockGenerator"
                          }
                        ],
                        "id": 107,
                        "name": "ReplicationBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "859:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationBlockGenerator_$816_$",
                          "typeString": "type(contract ReplicationBlockGenerator)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "859:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "src": "853:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "853:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "GUBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "898:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_GUBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "929:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                            "typeString": "contract GlobalUseBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                            "typeString": "contract GlobalUseBlockGenerator"
                          }
                        ],
                        "id": 113,
                        "name": "GlobalUseBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "905:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GlobalUseBlockGenerator_$831_$",
                          "typeString": "type(contract GlobalUseBlockGenerator)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "905:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "src": "898:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "898:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1882,
                  "src": "726:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "726:9:0"
              }
            ],
            "name": "setGenerators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "563:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                    "typeString": "contract DecentraCorpPoA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 74,
                    "name": "DecentraCorpPoA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 653,
                    "src": "563:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "_IDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "591:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdeaCoin_$666",
                    "typeString": "contract IdeaCoin"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "IdeaCoin",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 666,
                    "src": "591:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "_IBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "610:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                    "typeString": "contract IdeaBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 78,
                    "name": "IdeaBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 725,
                    "src": "610:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "_RBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "639:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                    "typeString": "contract ReplicationBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 80,
                    "name": "ReplicationBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "639:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "_GUBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "675:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                    "typeString": "contract GlobalUseBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 82,
                    "name": "GlobalUseBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 831,
                    "src": "675:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:153:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:0"
            },
            "scope": 145,
            "src": "535:407:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1012:156:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1029:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1021:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1041:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1021:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "1018:54:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1046:26:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1061:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 125,
                        "id": 132,
                        "nodeType": "Return",
                        "src": "1054:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "checkIfMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_member",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "969:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1006:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:6:0"
            },
            "scope": 145,
            "src": "946:222:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1224:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 141,
                    "name": "memberCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 849,
                    "src": "1237:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 140,
                  "id": 142,
                  "nodeType": "Return",
                  "src": "1230:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 144,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1218:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:6:0"
            },
            "scope": 145,
            "src": "1172:81:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 146,
        "src": "51:1242:0"
      }
    ],
    "src": "0:1294:0"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/DecentraCorp/contracts/CryptoPatent/CryptoPatentBlockchain.sol",
    "exportedSymbols": {
      "CryptoPatentBlockchain": [
        145
      ]
    },
    "id": 146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/stan36/repos/DecentraCorp/contracts/CryptoPatent/UseLogic.sol",
        "file": "./UseLogic.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 1675,
        "src": "25:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "UseLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1674,
              "src": "86:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UseLogic_$1674",
                "typeString": "contract UseLogic"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "86:8:0"
          }
        ],
        "contractDependencies": [
          406,
          928,
          1002,
          1674,
          1934
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 145,
        "linearizedBaseContracts": [
          145,
          1674,
          1002,
          406,
          928,
          1934
        ],
        "name": "CryptoPatentBlockchain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "192:253:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "globalBlockHalfTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "198:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3667,
                      "src": "220:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "198:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "198:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "229:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3665,
                          "src": "237:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "237:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "229:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "251:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "229:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "229:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "261:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "285:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29,
                        "name": "DecentraCorpPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "269:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorpPoA_$653_$",
                          "typeString": "type(contract DecentraCorpPoA)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "269:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "src": "261:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "261:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "IDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "298:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "_IDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "313:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IdeaCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "304:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaCoin_$666_$",
                          "typeString": "type(contract IdeaCoin)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "304:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "src": "298:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "298:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "IBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "324:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "_IBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "349:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "IdeaBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "330:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaBlockGenerator_$725_$",
                          "typeString": "type(contract IdeaBlockGenerator)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "330:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "src": "324:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "324:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "RBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "360:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "_RBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "392:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47,
                        "name": "ReplicationBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "366:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationBlockGenerator_$816_$",
                          "typeString": "type(contract ReplicationBlockGenerator)"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "366:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "src": "360:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "360:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "GUBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "403:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "_GUBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53,
                        "name": "GlobalUseBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "410:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GlobalUseBlockGenerator_$831_$",
                          "typeString": "type(contract GlobalUseBlockGenerator)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "410:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "src": "403:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "403:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "112:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "_IDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "128:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_IBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "142:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_RBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "156:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_GUBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "170:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "111:73:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:0:0"
            },
            "scope": 145,
            "src": "100:345:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "498:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "506:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_mem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "514:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "506:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "522:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "506:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "506:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1882,
                  "src": "489:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "489:9:0"
              }
            ],
            "name": "addMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "_mem",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "468:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "467:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:0"
            },
            "scope": 145,
            "src": "449:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "740:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "DCPoA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "748:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_dcpoa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "772:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                            "typeString": "contract DecentraCorpPoA"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                            "typeString": "contract DecentraCorpPoA"
                          }
                        ],
                        "id": 89,
                        "name": "DecentraCorpPoA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "756:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DecentraCorpPoA_$653_$",
                          "typeString": "type(contract DecentraCorpPoA)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                        "typeString": "contract DecentraCorpPoA"
                      }
                    },
                    "src": "748:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "748:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "IDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "787:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "_IDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdeaCoin_$666",
                            "typeString": "contract IdeaCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IdeaCoin_$666",
                            "typeString": "contract IdeaCoin"
                          }
                        ],
                        "id": 95,
                        "name": "IdeaCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "793:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaCoin_$666_$",
                          "typeString": "type(contract IdeaCoin)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "793:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaCoin_$666",
                        "typeString": "contract IdeaCoin"
                      }
                    },
                    "src": "787:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "787:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "IBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "815:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "_IBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "840:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                            "typeString": "contract IdeaBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                            "typeString": "contract IdeaBlockGenerator"
                          }
                        ],
                        "id": 101,
                        "name": "IdeaBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "821:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IdeaBlockGenerator_$725_$",
                          "typeString": "type(contract IdeaBlockGenerator)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "821:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                        "typeString": "contract IdeaBlockGenerator"
                      }
                    },
                    "src": "815:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "815:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "RBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "853:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "_RBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "885:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                            "typeString": "contract ReplicationBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                            "typeString": "contract ReplicationBlockGenerator"
                          }
                        ],
                        "id": 107,
                        "name": "ReplicationBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "859:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReplicationBlockGenerator_$816_$",
                          "typeString": "type(contract ReplicationBlockGenerator)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "859:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                        "typeString": "contract ReplicationBlockGenerator"
                      }
                    },
                    "src": "853:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "853:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "GUBG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "898:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_GUBG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "929:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                            "typeString": "contract GlobalUseBlockGenerator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                            "typeString": "contract GlobalUseBlockGenerator"
                          }
                        ],
                        "id": 113,
                        "name": "GlobalUseBlockGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "905:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GlobalUseBlockGenerator_$831_$",
                          "typeString": "type(contract GlobalUseBlockGenerator)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "905:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                        "typeString": "contract GlobalUseBlockGenerator"
                      }
                    },
                    "src": "898:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "898:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1882,
                  "src": "726:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "726:9:0"
              }
            ],
            "name": "setGenerators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "_dcpoa",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "563:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                    "typeString": "contract DecentraCorpPoA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 74,
                    "name": "DecentraCorpPoA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 653,
                    "src": "563:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentraCorpPoA_$653",
                      "typeString": "contract DecentraCorpPoA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "_IDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "591:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdeaCoin_$666",
                    "typeString": "contract IdeaCoin"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "IdeaCoin",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 666,
                    "src": "591:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaCoin_$666",
                      "typeString": "contract IdeaCoin"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "_IBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "610:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                    "typeString": "contract IdeaBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 78,
                    "name": "IdeaBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 725,
                    "src": "610:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdeaBlockGenerator_$725",
                      "typeString": "contract IdeaBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "_RBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "639:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                    "typeString": "contract ReplicationBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 80,
                    "name": "ReplicationBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 816,
                    "src": "639:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReplicationBlockGenerator_$816",
                      "typeString": "contract ReplicationBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "_GUBG",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "675:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                    "typeString": "contract GlobalUseBlockGenerator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 82,
                    "name": "GlobalUseBlockGenerator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 831,
                    "src": "675:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GlobalUseBlockGenerator_$831",
                      "typeString": "contract GlobalUseBlockGenerator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:153:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:0"
            },
            "scope": 145,
            "src": "535:407:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1012:156:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1029:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1021:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1041:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1021:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "1018:54:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1046:26:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1061:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 125,
                        "id": 132,
                        "nodeType": "Return",
                        "src": "1054:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "checkIfMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_member",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "969:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:17:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1006:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:6:0"
            },
            "scope": 145,
            "src": "946:222:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1224:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 141,
                    "name": "memberCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 849,
                    "src": "1237:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 140,
                  "id": 142,
                  "nodeType": "Return",
                  "src": "1230:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 144,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1218:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:6:0"
            },
            "scope": 145,
            "src": "1172:81:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 146,
        "src": "51:1242:0"
      }
    ],
    "src": "0:1294:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x11067e8332542b4a9310b57aea0de25a481311f6",
      "transactionHash": "0x9fc461ccfe04e9f42d51cbd542f6917c3c6ac3266598a42b2b7d82d743e7c099"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-24T02:51:23.359Z"
}